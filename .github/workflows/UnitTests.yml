name: Run unit tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    name: "Unit tests"
    runs-on: ubuntu-latest

    steps:
      - name: "Checking-out code"
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
        with:
          submodules: false

      - name: "Checking changed files"
        id: filter
        uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        if: github.event_name == 'pull_request'
        with:
          filters: |
            packages:
              - 'packages/**/*'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Defining cache"
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda #v4.1.0
        with:
          version: 10

      - name: "Defining node version"
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: ".nvmrc"
          cache: 'pnpm'

      - name: "Installing dependencies"
        working-directory: ./
        if: steps.filter.outputs.packages == 'true'
        run: pnpm -r install

      - name: "Running unit tests"
        working-directory: ./
        if: steps.filter.outputs.packages == 'true'
        run: pnpm -r test

      - name: "Linting generator-widget"
        working-directory: ./packages/generator-widget
        if: steps.filter.outputs.packages == 'true'
        run: pnpm run lint
